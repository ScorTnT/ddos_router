import{r as j,j as t}from"./index-DYyG9tY2.js";import{g as V,a as q,u as D,j as z,i as H,s as G,c as w,e as E,k as X,r as J,m as Q,t as P,b as W,T as e,F as $,B as L,P as o}from"./Box-BkwbmR-T.js";import{L as O,a as K}from"./List-CBW-7DnI.js";import{g as Y,l as B}from"./listItemTextClasses-D5PTEdEv.js";import{S as h}from"./Stack-tNIQgHZk.js";function Z(s){return q("MuiListItemButton",s)}const I=V("MuiListItemButton",["root","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","selected"]),tt=(s,r)=>{const{ownerState:i}=s;return[r.root,i.dense&&r.dense,i.alignItems==="flex-start"&&r.alignItemsFlexStart,i.divider&&r.divider,!i.disableGutters&&r.gutters]},st=s=>{const{alignItems:r,classes:i,dense:a,disabled:n,disableGutters:p,divider:c,selected:f}=s,u=E({root:["root",a&&"dense",!p&&"gutters",c&&"divider",n&&"disabled",r==="flex-start"&&"alignItemsFlexStart",f&&"selected"]},Z,i);return{...i,...u}},et=G(X,{shouldForwardProp:s=>J(s)||s==="classes",name:"MuiListItemButton",slot:"Root",overridesResolver:tt})(Q(({theme:s})=>({display:"flex",flexGrow:1,justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",minWidth:0,boxSizing:"border-box",textAlign:"left",paddingTop:8,paddingBottom:8,transition:s.transitions.create("background-color",{duration:s.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(s.vars||s).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${I.selected}`]:{backgroundColor:s.vars?`rgba(${s.vars.palette.primary.mainChannel} / ${s.vars.palette.action.selectedOpacity})`:P(s.palette.primary.main,s.palette.action.selectedOpacity),[`&.${I.focusVisible}`]:{backgroundColor:s.vars?`rgba(${s.vars.palette.primary.mainChannel} / calc(${s.vars.palette.action.selectedOpacity} + ${s.vars.palette.action.focusOpacity}))`:P(s.palette.primary.main,s.palette.action.selectedOpacity+s.palette.action.focusOpacity)}},[`&.${I.selected}:hover`]:{backgroundColor:s.vars?`rgba(${s.vars.palette.primary.mainChannel} / calc(${s.vars.palette.action.selectedOpacity} + ${s.vars.palette.action.hoverOpacity}))`:P(s.palette.primary.main,s.palette.action.selectedOpacity+s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:s.vars?`rgba(${s.vars.palette.primary.mainChannel} / ${s.vars.palette.action.selectedOpacity})`:P(s.palette.primary.main,s.palette.action.selectedOpacity)}},[`&.${I.focusVisible}`]:{backgroundColor:(s.vars||s).palette.action.focus},[`&.${I.disabled}`]:{opacity:(s.vars||s).palette.action.disabledOpacity},variants:[{props:({ownerState:r})=>r.divider,style:{borderBottom:`1px solid ${(s.vars||s).palette.divider}`,backgroundClip:"padding-box"}},{props:{alignItems:"flex-start"},style:{alignItems:"flex-start"}},{props:({ownerState:r})=>!r.disableGutters,style:{paddingLeft:16,paddingRight:16}},{props:({ownerState:r})=>r.dense,style:{paddingTop:4,paddingBottom:4}}]}))),rt=j.forwardRef(function(r,i){const a=D({props:r,name:"MuiListItemButton"}),{alignItems:n="center",autoFocus:p=!1,component:c="div",children:f,dense:b=!1,disableGutters:u=!1,divider:S=!1,focusVisibleClassName:T,selected:C=!1,className:A,...x}=a,y=j.useContext(O),d=j.useMemo(()=>({dense:b||y.dense||!1,alignItems:n,disableGutters:u}),[n,y.dense,b,u]),l=j.useRef(null);z(()=>{p&&l.current&&l.current.focus()},[p]);const g={...a,alignItems:n,dense:d.dense,disableGutters:u,divider:S,selected:C},m=st(g),v=H(l,i);return t.jsx(O.Provider,{value:d,children:t.jsx(et,{ref:v,href:x.href||x.to,component:(x.href||x.to)&&c==="div"?"button":c,focusVisibleClassName:w(m.focusVisible,T),ownerState:g,className:w(m.root,A),...x,classes:m,children:f})})}),ot=s=>{const{classes:r,inset:i,primary:a,secondary:n,dense:p}=s;return E({root:["root",i&&"inset",p&&"dense",a&&n&&"multiline"],primary:["primary"],secondary:["secondary"]},Y,r)},it=G("div",{name:"MuiListItemText",slot:"Root",overridesResolver:(s,r)=>{const{ownerState:i}=s;return[{[`& .${B.primary}`]:r.primary},{[`& .${B.secondary}`]:r.secondary},r.root,i.inset&&r.inset,i.primary&&i.secondary&&r.multiline,i.dense&&r.dense]}})({flex:"1 1 auto",minWidth:0,marginTop:4,marginBottom:4,[`.${$.root}:where(& .${B.primary})`]:{display:"block"},[`.${$.root}:where(& .${B.secondary})`]:{display:"block"},variants:[{props:({ownerState:s})=>s.primary&&s.secondary,style:{marginTop:6,marginBottom:6}},{props:({ownerState:s})=>s.inset,style:{paddingLeft:56}}]}),nt=j.forwardRef(function(r,i){const a=D({props:r,name:"MuiListItemText"}),{children:n,className:p,disableTypography:c=!1,inset:f=!1,primary:b,primaryTypographyProps:u,secondary:S,secondaryTypographyProps:T,slots:C={},slotProps:A={},...x}=a,{dense:y}=j.useContext(O);let d=b??n,l=S;const g={...a,disableTypography:c,inset:f,primary:!!d,secondary:!!l,dense:y},m=ot(g),v={slots:C,slotProps:{primary:u,secondary:T,...A}},[N,F]=W("root",{className:w(m.root,p),elementType:it,externalForwardedProps:{...v,...x},ownerState:g,ref:i}),[M,R]=W("primary",{className:m.primary,elementType:e,externalForwardedProps:v,ownerState:g}),[_,U]=W("secondary",{className:m.secondary,elementType:e,externalForwardedProps:v,ownerState:g});return d!=null&&d.type!==e&&!c&&(d=t.jsx(M,{variant:y?"body2":"body1",component:R?.variant?void 0:"span",...R,children:d})),l!=null&&l.type!==e&&!c&&(l=t.jsx(_,{variant:"body2",color:"textSecondary",...U,children:l})),t.jsxs(N,{...F,children:[d,l]})}),k={시작하기:t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsxs(e,{children:["본 문서는 Ddos 라우터 API 개발 연동을 위한 공식 가이드 문서입니다. ",t.jsx("br",{}),"API는 **Axios 기반**의 단일 클라이언트 파일(`api.js`)로 통합되어, 효율적인 관리를 제공합니다."]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 규격"}),t.jsxs(e,{children:["**RESTful** 방식으로 호출이 가능하며 **GET/POST**만 지원합니다. ",t.jsx("br",{}),"인증이 필요한 API는 먼저 로그인을 해야 합니다. 로그인 성공 시 발급되는 세션 ID를 `X-Session-ID` 헤더로 자동 전송합니다. ",t.jsx("br",{}),"응답 규약은 `",' status: "success", data: ... ',"` 또는 `",' status: "error", message: "..." ',"` 입니다."]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 호출 예제"}),t.jsx(e,{children:"아래는 `api.js` 파일을 사용한 로그인 예제입니다."}),t.jsx("pre",{children:t.jsx("code",{children:`import api from './api.js';

async function performLogin() {
    try {
        const username = 'root';
        const password = 'password';
        const loginSuccessful = await api.login(username, password, { remember: true });
        if (loginSuccessful) {
            console.log('로그인 성공!');
            const info = await api.getInformation();
            console.log('라우터 정보:', info);
        } else {
            console.log('로그인 실패!');
        }
    } catch (error) {
        console.error('로그인 중 오류 발생:', error);
    }
}
performLogin();`})})]})]}),인증:t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"Ddos 라우터 계정에 로그인, 로그아웃, 자동 로그인 상태를 확인하는 API입니다. 로그인 성공 시 발급되는 세션 ID는 `X-Session-ID` 헤더에 자동으로 포함됩니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 엔드 포인트"}),t.jsxs(e,{children:["**POST** `/api/auth/login` - 로그인 ",t.jsx("br",{}),"**POST** `/api/auth/logout` - 로그아웃 ",t.jsx("br",{})]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· Request Parameters (`/api/auth/login`)"}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "username": "string",
    "password": "string"
}`})})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· Received Message (`/api/auth/login`)"}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "status": "success",
    "data": {
        "message": "로그인 성공",
        "session_id": "string",
        "expires_at": "string"
    }
}`})})]})]}),"정보 조회":t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"라우터의 현재 상태 및 연결된 장치에 대한 정보를 조회합니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 엔드 포인트"}),t.jsxs(e,{children:["**GET** `/api/information` - 라우터 전체 정보 ",t.jsx("br",{}),"**GET** `/api/information/neighbors` - 이웃(Neighbors) 장치 정보 ",t.jsx("br",{}),"**GET** `/api/information/connections` - 현재 연결 정보 ",t.jsx("br",{})]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· Response Sample Code (Json)"}),t.jsx(e,{children:"**`GET` `/api/information`**"}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "status": "success",
    "data": {
        "Hostname": "DDOS-Router",
        "OS Version": "1.0.0",
        "MAC Address": "00:11:22:33:44:55"
    }
}`})}),t.jsx(e,{sx:{mt:2},children:"**`GET` `/api/information/neighbors`**"}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "status": "success",
    "data": [
        { "ip": "192.168.1.10", "mac": "AA:BB:CC:DD:EE:FF" }
    ]
}`})})]})]}),"설정 조회":t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"라우터의 WAN 및 LAN 네트워크 설정을 조회하고 변경합니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 엔드 포인트"}),t.jsxs(e,{children:["**GET** `/api/config/wan` - WAN 설정 조회 ",t.jsx("br",{}),"**POST** `/api/config/wan` - WAN 설정 업데이트 ",t.jsx("br",{}),"**GET** `/api/config/lan` - LAN 설정 조회 ",t.jsx("br",{}),"**POST** `/api/config/lan` - LAN 설정 업데이트 ",t.jsx("br",{})]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· Request Parameters (`/api/config/wan`)"}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "connection_type": "dhcp" | "static",
    "ip_addr": "string",
    "netmask": "string",
    "gateway": "string",
    "dns_list": ["string", "string"],
    "mac_addr": "string",
    "mtu": "number",
    "is_custom_dns": "boolean",
    "is_custom_mac": "boolean",
    "manualMtu": "boolean"
}`})})]})]}),"보안 관리":t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"악성 IP를 차단하거나 차단된 IP를 허용하는 API입니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 엔드 포인트"}),t.jsxs(e,{children:["**GET** `/api/protection` - 차단된 IP 목록 조회 ",t.jsx("br",{}),"**POST** `/api/protection/ip/block` - IP 차단 (쿼리 파라미터로 IP 전달) ",t.jsx("br",{}),"**POST** `/api/protection/ip/unblock` - IP 차단 해제 (쿼리 파라미터로 IP 전달) ",t.jsx("br",{})]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· Request Parameters (`/api/protection/ip/block`)"}),t.jsxs(e,{children:["- **Query String**: `?ip=string&is_permanent=boolean`",t.jsx("br",{}),"- **ip**: 차단할 IP 주소 (필수)",t.jsx("br",{}),"- **is_permanent**: 영구 차단 여부 (선택, 기본값: false)"]})]})]}),"에러 헨들링":t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"`api.js` 파일의 응답 인터셉터를 통해 모든 API 요청에 대한 에러를 중앙에서 처리합니다. 특히, 세션이 만료된 경우(HTTP 401) 자동으로 로그아웃을 처리합니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 에러 코드"}),t.jsxs(e,{children:["- **401 Unauthorized**: 세션 ID가 유효하지 않거나 만료된 경우.",t.jsx("br",{}),"- **404 Not Found**: 요청한 엔드포인트가 존재하지 않거나, (특정 API의 경우) 리소스가 없는 경우."]})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· API 응답 규약"}),t.jsx(e,{children:"오류 응답은 다음 형식을 따릅니다."}),t.jsx("pre",{children:t.jsx("code",{children:`{
    "status": "error",
    "message": "오류 메시지"
}`})})]})]}),유틸리티:t.jsxs(h,{spacing:3,children:[t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 개요"}),t.jsx(e,{children:"API 클라이언트 내에서 세션 관리 및 기타 보조 기능을 제공합니다."})]}),t.jsxs(o,{sx:{p:3},children:[t.jsx(e,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"· 주요 기능"}),t.jsxs(e,{children:["- `setSession(id, persist)`: 세션 ID를 `sessionStorage` 또는 `localStorage`에 저장합니다. ",t.jsx("br",{}),"- `clearSession()`: 저장된 세션 ID를 삭제합니다. ",t.jsx("br",{}),"- `getSessionId()`: 저장된 세션 ID를 가져옵니다."]})]})]})},ut=()=>{const[s,r]=j.useState("시작하기"),i=Object.keys(k),a=k[s];return t.jsxs(L,{display:"flex",sx:{p:3},children:[t.jsxs(L,{sx:{minWidth:250,borderRight:"1px solid #ddd",pr:2},children:[t.jsx(e,{variant:"h6",gutterBottom:!0,children:"API 개발가이드"}),t.jsx(K,{dense:!0,children:i.map(n=>t.jsx(rt,{selected:s===n,onClick:()=>r(n),children:t.jsx(nt,{primary:n,primaryTypographyProps:{sx:{color:s===n?"primary.main":"inherit"}}})},n))})]}),t.jsxs(L,{sx:{flexGrow:1,pl:4},children:[t.jsx(e,{variant:"h5",gutterBottom:!0,children:s}),a]})]})};export{ut as default};
